% Prolog program for forward chaining inference

% Facts representing initial knowledge base
fact(raining).
fact(cloudy).

% Rules for inference
infer(wet_ground) :- fact(raining), \+ fact(wet_ground), assertz(fact(wet_ground)).
infer(umbrella_needed) :- fact(raining), \+ fact(umbrella_needed), assertz(fact(umbrella_needed)).
infer(light_on) :- fact(cloudy), \+ fact(light_on), assertz(fact(light_on)).

% Forward chaining algorithm
forward_chain :-
    infer(_),
    fail.
forward_chain :-
    write('Inference complete.'), nl,
    list_facts.

% Helper predicate to list all facts
list_facts :-
    fact(X),
    write('Fact: '), write(X), nl,
    fail.
list_facts.

% Example query:
% ?- forward_chain. % Runs the forward chaining process and lists inferred facts
